{
  "version": 3,
  "file": "scripts-bundle.js",
  "sources": [
    "src/simply-app/js/general/global-variables.js",
    "src/simply-app/js/general/routes-and-redirects.js",
    "src/simply-app/js/general/utility-functions.js",
    "src/simply-app/js/features/main-navigation.js",
    "src/simply-app/js/features/analytics-tracking.js",
    "src/simply-app/js/features/demo-page.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "/*====================================================================\n=            Global variables, environment variables etc.            =\n====================================================================*/\n\n//var API_HOST = 'https://api.example.com';\n//API_HOST = 'http://localhost:4000'; //comment before merge!!!!!!!!!!\n//PROD_ROOT_DOMAIN defined on top of index.html\n\n\n/*=====  End of Global variables, environment variables etc.  ======*/\n\n\n/////////////////////////////////",
    "var URLs = {\n\thomepage: 'https://example.com'\n};\n\nif ( window.location.pathname === \"/\") {\n\tStateURL.setDefaultParam('subpage', 'home', {doNotCreateHistoryState: true});\n}",
    "// Utility functions specific to the app not to framework",
    "\n\n// StateURL.onParamChange('subpage', function(value) {\n// \tif (typeof value != 'undefined') {\n// \t    showOnlyElementsWithAttributeXMatchingY('js-subpage', value);\n// \t}\n\n// \t$('[js-main-scroll-area]').scrollTo(0);\n// });\n\n// $.On('click', '[js-go-to-subpage]', function() {\n// \tvar targetSubpage = $(this).attr('js-go-to-subpage');\n// \tStateURL.set('subpage', targetSubpage);\n// });\n\n// State.setDefault('user-logged-in', 'false');\n// State.onChange('user-logged-in', function(value) {\n//   $('[js-show-when-logged-in]').isShownWhen(value === 'true');\n//   $('[js-show-when-not-logged-in]').isShownWhen(value === 'false');\n// });\n\n// $.On('click', '[js-action-log-in]', function() {\n//   window.location.href = \"/fake-auth\";\n// });\n\n// StateURL.onChange('loggedIn', function(value) {\n//   if (value === \"true\") {\n//     State.set('user-logged-in', 'true');\n//     StateURL.set('modalContent', 'finish-profile');\n//     StateURL.remove('loggedIn', {doNotCreateHistoryState: true});\n//   }\n// });\n\n// $.On('click', '[js-action-log-out]', function() {\n//   State.set('user-logged-in', 'false');\n// });\n\n// //SPA navigation tabs -- currently unused, kept just in case\n// StateURL.onParamChange('mainTab', function(value) {\n// \tif (typeof value != 'undefined') {\n// \t\t$('[main-tab-id]').not('[main-tab-id=\"'+value+'\"]').removeClass('is-current');\n// \t\t$('[main-tab-id=\"'+value+'\"]').addClass('is-current');\n\n// \t    $('[secondary-navbar-id]').not('[secondary-navbar-id=\"'+value+'\"]').addClass('is-hidden');\n// \t    $('[secondary-navbar-id=\"'+value+'\"]').removeClass('is-hidden');\n// \t}\n// });\n\n// $.On('click', '[main-tab-id]', function(event) {\n// \tvar valueToSet = $(event.currentTarget).attr('main-tab-id');\n// \tStateURL.setParam('mainTab', valueToSet);\n\n// \t//clicking on tab should load the first subtab content\n// \tvar relatedSecondaryNavbarId = $(event.currentTarget).attr('main-tab-id');\n// \tvar firstSecondaryTab = $('[secondary-navbar-id=\"'+relatedSecondaryNavbarId+'\"]').find('[secondary-tab-id]').first();\n// \tvar subpageId = firstSecondaryTab.attr('secondary-tab-id');\n// \tStateURL.setParam('subpage', subpageId, {doNotCreateHistoryState: true});\n// \tStateURL.setParam('secondaryTab', subpageId, {doNotCreateHistoryState: true});\n// });\n\n// $.On('click', '[secondary-tab-id]', function(event) {\n// \tvar valueToSet = $(event.currentTarget).attr('secondary-tab-id');\n// \tsetTimeout(function() {\n// \t\tStateURL.setParam('secondaryTab', valueToSet, {doNotCreateHistoryState: true});\n// \t}, 1);\n// \tStateURL.setParam('subpage', valueToSet);\n// });\n\n// StateURL.onParamChange('secondaryTab', function(value) {\n// \t$('[secondary-tab-id]').not('[secondary-tab-id=\"'+value+'\"]').removeClass('is-current');\n// \t$('[secondary-tab-id=\"'+value+'\"]').addClass('is-current');\n// });",
    "StateURL.onParamChange('subpage', function(value) {\n  if (typeof gtag !== 'undefined') {\n    gtag('event', 'Page view', {\n      'event_category': 'Navigation',\n      'event_label': value,\n    });\n\n    // if (value === \"thank-you\") {\n    //   gtag('event', 'Reached thank you page', {\n    //     'event_category': 'Navigation',\n    //   });\n    // }\n\n    //TODO add changes to tracked pagepath for Single Page App\n    //https://developers.google.com/analytics/devguides/collection/gtagjs/single-page-applications\n  }\n\n  // if (typeof fbq !== 'undefined') {\n\n  //   if (value === \"thank-you\") {\n  //     fbq('track', 'Thank you');\n  //   }\n\n  // }\n});\n\n// StateURL.onParamChange('modalContent', function(value) {\n//   if (typeof gtag !== 'undefined') {\n//     if (value === 'product-details') {\n//       gtag('event', 'Opened modal with energy product details', {\n//         'event_category': 'Navigation',\n//       });\n//     }\n//   }\n// });",
    "$.On('click', '[js-validate-demo-form]', function() {\n\tvar thisForm = $(this).closest('[js-demo-block-form]');\n\tState.validateElementChildren(thisForm, {\n\t\tonSuccess: function() {\n\t\t\tFlashingNotifications.showAndHideNotification('success', 'All good!', 2000);\n\t\t},\n\t\tonError: function() {\n\t\t\tvar firstError = thisForm.find('[has-error]').first();\n\t\t\t$('body').scrollTo(firstError, 1000, {offset: -100}); //you have full control of what happens after error\n\t\t}\n\t});\n});\n\nState.setValidationRules('demo-checkbox', function(value) {\n\tif (value !== \"true\") {\n\t\treturn 'required';\n\t} else {\n\t\treturn 'good';\n\t}\n});\n\nState.setValidationRules('demo-checkbox-2', function(value) {\n\tif (value !== \"true\") {\n\t\treturn 'required';\n\t} else {\n\t\treturn 'good';\n\t}\n});\n\nState.setValidationRules('demo-input-number', function(value) {\n\tif (value === \"\") {\n\t\treturn 'required';\n\t} else if (isNotNumeric(value)) {\n\t\treturn 'not-a-number';\n\t} else {\n\t\treturn 'good';\n\t}\n});\n\nState.setValidationRules('demo-textarea', function(value) {\n\tif (value === \"\") {\n\t\treturn 'required';\n\t} else if (value.length < 10) {\n\t\treturn 'too-short';\n\t} else {\n\t\treturn 'good';\n\t}\n});"
  ]
}